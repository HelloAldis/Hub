---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';
import { blogCategoryRobots, getStaticPathsBlogCategory } from '~/utils/blog';

import Layout from '~/layouts/PageLayout.astro';
import BlogList from '~/components/blog/List.astro';
import Headline from '~/components/blog/Headline.astro';
import PaginationNew from '~/components/blog/PaginationNew.astro';

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  return await getStaticPathsBlogCategory({ paginate }, 'seven');
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths> & { category: Record<string, string> };

const { page, category } = Astro.props as Props;

const currentPage = page.currentPage ?? 1;
const totalPages = Math.ceil(page.total / page.size);
const basePath = '/seven/blog/';

const metadata = {
  title: `Category '${category.title}' ${currentPage > 1 ? ` â€” Page ${currentPage}` : ''}`,
  robots: {
    index: blogCategoryRobots?.index,
    follow: blogCategoryRobots?.follow,
  },
};
---

<Layout metadata={metadata}>
  <section class="px-4 md:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-4xl">
    <Headline>{category.title}</Headline>
    <BlogList posts={page.data} user="seven" />
    <PaginationNew
      currentPage={currentPage}
      lastPage={totalPages}
      urlPrev={page.url.prev}
      urlNext={page.url.next}
      basePath={basePath}
      maxDisplayedPages={4}
    />
  </section>
</Layout>
